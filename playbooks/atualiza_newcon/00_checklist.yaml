- name: Windows Feature
  hosts: win
  vars_files:
    - vars/variaveis.yaml  
  gather_facts: false
  tasks:
    ## Download do pacote de versão
    - name: Download do pacote da versao
      ansible.windows.win_get_url:
        url: '{{ url_ftp }}'
        dest: '{{ dir_newcon_deploy }}\Releases\'

    - name: Extrair parte da URL após a última barra
      set_fact:
        nome_arquivo: "{{ url_ftp | regex_replace('.*/', '') }}"

    - name: Remover extensão do arquivo
      set_fact:
        nome_arquivo_sem_extensao: "{{ nome_arquivo.split('.')[0] }}"

    ## Descompactar pacote
    - name: Descompactar pacote
      community.windows.win_unzip:
        src: '{{ dir_newcon_deploy }}\Releases\{{ nome_arquivo }}'
        dest: '{{ dir_newcon_deploy }}\Releases\{{ nome_arquivo_sem_extensao }}\'
        delete_archive: yes

    ## Verifica programas abertos a partir do diretorio com os executaveis do pacote
    - name: Verificar programas abertos
      win_shell: |
        $programas = Get-ChildItem -Path "{{ dir_newcon_deploy }}\Releases\Bin_Sch_Conins\*.exe" | Where-Object {! $_.PSIsContainer} | ForEach-Object { $_.Name -replace '\.\w+$' } | Where-Object { $_ -match '\S' }
        $programasAbertos = @()
        foreach ($programa in $programas) {
            $processo = Get-Process -Name $programa -ErrorAction SilentlyContinue
            if ($processo) {
                $programasAbertos += $programa
            }
        }
        $programasAbertos
      register: programas_abertos

    ## Exibe os programas abertos
    - name: Exibir programas abertos
      debug:
        msg: "Os seguintes programas estão abertos: {{ programas_abertos.stdout }}"
      when: programas_abertos.stdout | length > 0

    ## Caso tenha programa aberto finaliza o processo com falha
    - name: Abend em caso de arquivo aberto
      fail:
      when: programas_abertos.stdout | length > 0